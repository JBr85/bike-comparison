{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BikeVisualization=_ref=>{let{frame1,stem1,handlebar1,stackHeight1,frame2,stem2,handlebar2,stackHeight2,stems=[]}=_ref;const[bestStem,setBestStem]=useState(null);const hasValidBikes=frame1&&stem1&&handlebar1&&frame2&&handlebar2;const degToRad=angle=>angle*Math.PI/180;const calculateBarPosition=useCallback((frame,stem,handlebar,stackHeight)=>{if(!frame||!stem||!handlebar)return{effectiveReach:0,totalDrop:0,stemEnd:[0,0],barEnd:[0,0]};const headTubeAngle=90-frame.head_angle;const fullStemAngle=degToRad(headTubeAngle+stem.angle);const stemLength=stem.length;const handlebarReach=handlebar.reach;const handlebarDrop=handlebar.drop;const adjustedStackHeight=parseFloat(stackHeight||0);const effectiveStemReach=stemLength*Math.cos(fullStemAngle);const effectiveReach=Math.round(frame.reach+effectiveStemReach+handlebarReach);const effectiveStemStack=stemLength*Math.sin(fullStemAngle);const effectiveStack=Math.round(frame.stack+adjustedStackHeight+effectiveStemStack);const handlebarVerticalShift=handlebar.reach*Math.tan(degToRad(headTubeAngle));const totalDrop=Math.round(effectiveStack-handlebarDrop-handlebarVerticalShift);const stemEnd=[stemLength*Math.cos(fullStemAngle),adjustedStackHeight+stemLength*Math.sin(fullStemAngle)];const barEnd=[stemEnd[0]+handlebarReach,stemEnd[1]-handlebarDrop];return{effectiveReach,totalDrop,stemEnd,barEnd};},[]);const bike1=calculateBarPosition(frame1,stem1,handlebar1,stackHeight1);const bike2=calculateBarPosition(frame2,stem2,handlebar2,stackHeight2);const findBestStem=useCallback(()=>{if(!frame2||!handlebar2||stems.length===0)return null;let closestStem=null;let bestDifference=Number.MAX_VALUE;stems.forEach(stem=>{[-stem.angle,stem.angle].forEach(testAngle=>{const testStem={...stem,angle:testAngle};const testBike2=calculateBarPosition(frame2,testStem,handlebar2,stackHeight2);const reachDiff=Math.abs(testBike2.effectiveReach-bike1.effectiveReach);const dropDiff=Math.abs(testBike2.totalDrop-bike1.totalDrop);const totalDiff=reachDiff+dropDiff;if(totalDiff<bestDifference){bestDifference=totalDiff;closestStem={...testStem,reachDiff,dropDiff,totalDiff};}});});return closestStem;},[frame2,handlebar2,stems,stackHeight2,calculateBarPosition,bike1.effectiveReach,bike1.totalDrop]);useEffect(()=>{if(hasValidBikes){const recommended=findBestStem();console.log(\"Recommended Stem:\",recommended);setBestStem(recommended);}},[findBestStem,hasValidBikes]);return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Bike Geometry Comparison\"})}),/*#__PURE__*/_jsxs(\"table\",{style:{width:\"60%\",margin:\"0 auto\",borderCollapse:\"collapse\"},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:tableHeaderStyle}),/*#__PURE__*/_jsx(\"th\",{style:tableHeaderStyle,children:\"Bike 1\"}),/*#__PURE__*/_jsx(\"th\",{style:tableHeaderStyle,children:\"Bike 2\"}),/*#__PURE__*/_jsx(\"th\",{style:tableHeaderStyle,children:\"Difference\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:tableCellStyle,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Reach\"})}),/*#__PURE__*/_jsxs(\"td\",{style:tableCellStyle,children:[bike1.effectiveReach,\" mm\"]}),/*#__PURE__*/_jsxs(\"td\",{style:tableCellStyle,children:[bike2.effectiveReach,\" mm\"]}),/*#__PURE__*/_jsx(\"td\",{style:tableCellStyle,children:/*#__PURE__*/_jsxs(\"strong\",{children:[bike2.effectiveReach-bike1.effectiveReach,\" mm\"]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:tableCellStyle,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Total Drop\"})}),/*#__PURE__*/_jsxs(\"td\",{style:tableCellStyle,children:[bike1.totalDrop,\" mm\"]}),/*#__PURE__*/_jsxs(\"td\",{style:tableCellStyle,children:[bike2.totalDrop,\" mm\"]}),/*#__PURE__*/_jsx(\"td\",{style:tableCellStyle,children:/*#__PURE__*/_jsxs(\"strong\",{children:[bike2.totalDrop-bike1.totalDrop,\" mm\"]})})]})]})]})]});};const tableHeaderStyle={padding:\"10px\",borderBottom:\"2px solid black\",fontWeight:\"bold\",textAlign:\"center\",backgroundColor:\"#f4f4f4\"};const tableCellStyle={padding:\"10px\",borderBottom:\"1px solid #ddd\",textAlign:\"center\"};export default BikeVisualization;","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","BikeVisualization","_ref","frame1","stem1","handlebar1","stackHeight1","frame2","stem2","handlebar2","stackHeight2","stems","bestStem","setBestStem","hasValidBikes","degToRad","angle","Math","PI","calculateBarPosition","frame","stem","handlebar","stackHeight","effectiveReach","totalDrop","stemEnd","barEnd","headTubeAngle","head_angle","fullStemAngle","stemLength","length","handlebarReach","reach","handlebarDrop","drop","adjustedStackHeight","parseFloat","effectiveStemReach","cos","round","effectiveStemStack","sin","effectiveStack","stack","handlebarVerticalShift","tan","bike1","bike2","findBestStem","closestStem","bestDifference","Number","MAX_VALUE","forEach","testAngle","testStem","testBike2","reachDiff","abs","dropDiff","totalDiff","recommended","console","log","style","textAlign","marginTop","children","width","margin","borderCollapse","tableHeaderStyle","tableCellStyle","padding","borderBottom","fontWeight","backgroundColor"],"sources":["C:/Users/james/OneDrive/Documents/Bike Comparison Tool/frontend/src/components/BikeVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst BikeVisualization = ({\r\n    frame1, stem1, handlebar1, stackHeight1,\r\n    frame2, stem2, handlebar2, stackHeight2,\r\n    stems = []\r\n}) => {\r\n    const [bestStem, setBestStem] = useState(null);\r\n\r\n    const hasValidBikes = frame1 && stem1 && handlebar1 && frame2 && handlebar2;\r\n\r\n    const degToRad = (angle) => (angle * Math.PI) / 180;\r\n\r\n    const calculateBarPosition = useCallback((frame, stem, handlebar, stackHeight) => {\r\n        if (!frame || !stem || !handlebar) return { effectiveReach: 0, totalDrop: 0, stemEnd: [0, 0], barEnd: [0, 0] };\r\n\r\n        const headTubeAngle = 90 - frame.head_angle;\r\n        const fullStemAngle = degToRad(headTubeAngle + stem.angle);\r\n        const stemLength = stem.length;\r\n        const handlebarReach = handlebar.reach;\r\n        const handlebarDrop = handlebar.drop;\r\n        const adjustedStackHeight = parseFloat(stackHeight || 0);\r\n\r\n        const effectiveStemReach = stemLength * Math.cos(fullStemAngle);\r\n        const effectiveReach = Math.round(frame.reach + effectiveStemReach + handlebarReach);\r\n\r\n        const effectiveStemStack = stemLength * Math.sin(fullStemAngle);\r\n        const effectiveStack = Math.round(frame.stack + adjustedStackHeight + effectiveStemStack);\r\n        const handlebarVerticalShift = handlebar.reach * Math.tan(degToRad(headTubeAngle));\r\n        const totalDrop = Math.round(effectiveStack - handlebarDrop - handlebarVerticalShift);\r\n\r\n        const stemEnd = [stemLength * Math.cos(fullStemAngle), adjustedStackHeight + stemLength * Math.sin(fullStemAngle)];\r\n        const barEnd = [stemEnd[0] + handlebarReach, stemEnd[1] - handlebarDrop];\r\n\r\n        return { effectiveReach, totalDrop, stemEnd, barEnd };\r\n    }, []);\r\n\r\n    const bike1 = calculateBarPosition(frame1, stem1, handlebar1, stackHeight1);\r\n    const bike2 = calculateBarPosition(frame2, stem2, handlebar2, stackHeight2);\r\n\r\n    const findBestStem = useCallback(() => {\r\n        if (!frame2 || !handlebar2 || stems.length === 0) return null;\r\n\r\n        let closestStem = null;\r\n        let bestDifference = Number.MAX_VALUE;\r\n\r\n        stems.forEach(stem => {\r\n            [-stem.angle, stem.angle].forEach(testAngle => {\r\n                const testStem = { ...stem, angle: testAngle };\r\n                const testBike2 = calculateBarPosition(frame2, testStem, handlebar2, stackHeight2);\r\n\r\n                const reachDiff = Math.abs(testBike2.effectiveReach - bike1.effectiveReach);\r\n                const dropDiff = Math.abs(testBike2.totalDrop - bike1.totalDrop);\r\n                const totalDiff = reachDiff + dropDiff;\r\n\r\n                if (totalDiff < bestDifference) {\r\n                    bestDifference = totalDiff;\r\n                    closestStem = { ...testStem, reachDiff, dropDiff, totalDiff };\r\n                }\r\n            });\r\n        });\r\n\r\n        return closestStem;\r\n    }, [frame2, handlebar2, stems, stackHeight2, calculateBarPosition, bike1.effectiveReach, bike1.totalDrop]);\r\n\r\n    useEffect(() => {\r\n        if (hasValidBikes) {\r\n            const recommended = findBestStem();\r\n            console.log(\"Recommended Stem:\", recommended);\r\n            setBestStem(recommended);\r\n        }\r\n    }, [findBestStem, hasValidBikes]);\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n            <h3><strong>Bike Geometry Comparison</strong></h3>\r\n\r\n            <table style={{ width: \"60%\", margin: \"0 auto\", borderCollapse: \"collapse\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={tableHeaderStyle}></th>\r\n                        <th style={tableHeaderStyle}>Bike 1</th>\r\n                        <th style={tableHeaderStyle}>Bike 2</th>\r\n                        <th style={tableHeaderStyle}>Difference</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style={tableCellStyle}><strong>Reach</strong></td>\r\n                        <td style={tableCellStyle}>{bike1.effectiveReach} mm</td>\r\n                        <td style={tableCellStyle}>{bike2.effectiveReach} mm</td>\r\n                        <td style={tableCellStyle}><strong>{bike2.effectiveReach - bike1.effectiveReach} mm</strong></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tableCellStyle}><strong>Total Drop</strong></td>\r\n                        <td style={tableCellStyle}>{bike1.totalDrop} mm</td>\r\n                        <td style={tableCellStyle}>{bike2.totalDrop} mm</td>\r\n                        <td style={tableCellStyle}><strong>{bike2.totalDrop - bike1.totalDrop} mm</strong></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst tableHeaderStyle = {\r\n    padding: \"10px\",\r\n    borderBottom: \"2px solid black\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#f4f4f4\"\r\n};\r\n\r\nconst tableCellStyle = {\r\n    padding: \"10px\",\r\n    borderBottom: \"1px solid #ddd\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nexport default BikeVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}