{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\OneDrive\\\\Documents\\\\Bike Comparison Tool\\\\frontend\\\\src\\\\components\\\\BikeComparisonImage.js\";\nimport React, { useEffect, useState } from \"react\";\nconst BikeComparisonImage = ({\n  bike1,\n  bike2\n}) => {\n  const [imageBase64, setImageBase64] = useState(null);\n  useEffect(() => {\n    if (!bike1 || !bike2) return;\n\n    // IMPORTANT: Use backticks around process.env!\n    fetch(`${process.env.REACT_APP_API_URL}/geometry-image`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        bike1,\n        bike2\n      })\n    }).then(res => res.json()).then(data => {\n      setImageBase64(data.image_base64);\n    }).catch(err => console.error(\"Error fetching geometry image:\", err));\n  }, [bike1, bike2]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDDBC\\uFE0F Front-End Geometry Visual\"), imageBase64 ? /*#__PURE__*/React.createElement(\"img\", {\n    // Use backticks + interpolation:\n    src: `data:image/png;base64,${imageBase64}`,\n    alt: \"Geometry Comparison\",\n    style: {\n      maxWidth: \"100%\",\n      border: \"1px solid #ccc\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Loading geometry image...\"));\n};\nexport default BikeComparisonImage;","map":{"version":3,"names":["React","useEffect","useState","BikeComparisonImage","bike1","bike2","imageBase64","setImageBase64","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","then","res","json","data","image_base64","catch","err","console","error","createElement","style","textAlign","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","maxWidth","border"],"sources":["C:/Users/james/OneDrive/Documents/Bike Comparison Tool/frontend/src/components/BikeComparisonImage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst BikeComparisonImage = ({ bike1, bike2 }) => {\r\n    const [imageBase64, setImageBase64] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!bike1 || !bike2) return;\r\n\r\n        // IMPORTANT: Use backticks around process.env!\r\n        fetch(`${process.env.REACT_APP_API_URL}/geometry-image`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ bike1, bike2 }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setImageBase64(data.image_base64);\r\n            })\r\n            .catch((err) => console.error(\"Error fetching geometry image:\", err));\r\n    }, [bike1, bike2]);\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\r\n            <h3>üñºÔ∏è Front-End Geometry Visual</h3>\r\n            {imageBase64 ? (\r\n                <img\r\n                    // Use backticks + interpolation:\r\n                    src={`data:image/png;base64,${imageBase64}`}\r\n                    alt=\"Geometry Comparison\"\r\n                    style={{ maxWidth: \"100%\", border: \"1px solid #ccc\" }}\r\n                />\r\n            ) : (\r\n                <p>Loading geometry image...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BikeComparisonImage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACG,KAAK,IAAI,CAACC,KAAK,EAAE;;IAEtB;IACAG,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,iBAAiB,EAAE;MACrDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,KAAK;QAAEC;MAAM,CAAC;IACzC,CAAC,CAAC,CACGY,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZb,cAAc,CAACa,IAAI,CAACC,YAAY,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC,CAAC;EAC7E,CAAC,EAAE,CAACnB,KAAK,EAAEC,KAAK,CAAC,CAAC;EAElB,oBACIL,KAAA,CAAA0B,aAAA;IAAKC,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnDnC,KAAA,CAAA0B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,8CAAiC,CAAC,EACrC7B,WAAW,gBACRN,KAAA,CAAA0B,aAAA;IACI;IACAU,GAAG,EAAE,yBAAyB9B,WAAW,EAAG;IAC5C+B,GAAG,EAAC,qBAAqB;IACzBV,KAAK,EAAE;MAAEW,QAAQ,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAiB,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzD,CAAC,gBAEFnC,KAAA,CAAA0B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,2BAA4B,CAElC,CAAC;AAEd,CAAC;AAED,eAAehC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}