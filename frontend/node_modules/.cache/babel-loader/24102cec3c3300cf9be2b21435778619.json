{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\OneDrive\\\\Documents\\\\Bike Comparison Tool\\\\frontend\\\\src\\\\components\\\\BikeVisualization.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nconst BikeVisualization = ({\n  frame1,\n  stem1,\n  handlebar1,\n  stackHeight1,\n  frame2,\n  stem2,\n  handlebar2,\n  stackHeight2,\n  stems = []\n}) => {\n  const [bestStem, setBestStem] = useState(null);\n  const hasValidBikes = frame1 && stem1 && handlebar1 && frame2 && handlebar2;\n  const degToRad = angle => angle * Math.PI / 180;\n  const calculateBarPosition = useCallback((frame, stem, handlebar, stackHeight) => {\n    if (!frame || !stem || !handlebar) return {\n      effectiveReach: 0,\n      totalDrop: 0,\n      stemEnd: [0, 0],\n      barEnd: [0, 0]\n    };\n    const headTubeAngle = 90 - frame.head_angle;\n    const fullStemAngle = degToRad(headTubeAngle + stem.angle);\n    const stemLength = stem.length;\n    const handlebarReach = handlebar.reach;\n    const handlebarDrop = handlebar.drop;\n    const adjustedStackHeight = parseFloat(stackHeight || 0);\n    const effectiveStemReach = stemLength * Math.cos(fullStemAngle);\n    const effectiveReach = Math.round(frame.reach + effectiveStemReach + handlebarReach);\n    const effectiveStemStack = stemLength * Math.sin(fullStemAngle);\n    const effectiveStack = Math.round(frame.stack + adjustedStackHeight + effectiveStemStack);\n    const handlebarVerticalShift = handlebar.reach * Math.tan(degToRad(headTubeAngle));\n    const totalDrop = Math.round(effectiveStack - handlebarDrop - handlebarVerticalShift);\n    const stemEnd = [stemLength * Math.cos(fullStemAngle), adjustedStackHeight + stemLength * Math.sin(fullStemAngle)];\n    const barEnd = [stemEnd[0] + handlebarReach, stemEnd[1] - handlebarDrop];\n    return {\n      effectiveReach,\n      totalDrop,\n      stemEnd,\n      barEnd\n    };\n  }, []);\n  const bike1 = calculateBarPosition(frame1, stem1, handlebar1, stackHeight1);\n  const bike2 = calculateBarPosition(frame2, stem2, handlebar2, stackHeight2);\n  const findBestStem = useCallback(() => {\n    if (!frame2 || !handlebar2 || stems.length === 0) return null;\n    let closestStem = null;\n    let bestDifference = Number.MAX_VALUE;\n    stems.forEach(stem => {\n      [-stem.angle, stem.angle].forEach(testAngle => {\n        const testStem = {\n          ...stem,\n          angle: testAngle\n        };\n        const testBike2 = calculateBarPosition(frame2, testStem, handlebar2, stackHeight2);\n        const reachDiff = Math.abs(testBike2.effectiveReach - bike1.effectiveReach);\n        const dropDiff = Math.abs(testBike2.totalDrop - bike1.totalDrop);\n        const totalDiff = reachDiff + dropDiff;\n        if (totalDiff < bestDifference) {\n          bestDifference = totalDiff;\n          closestStem = {\n            ...testStem,\n            reachDiff,\n            dropDiff,\n            totalDiff\n          };\n        }\n      });\n    });\n    return closestStem;\n  }, [frame2, handlebar2, stems, stackHeight2, calculateBarPosition, bike1.effectiveReach, bike1.totalDrop]);\n  useEffect(() => {\n    if (hasValidBikes) {\n      const recommended = findBestStem();\n      console.log(\"Recommended Stem:\", recommended);\n      setBestStem(recommended);\n    }\n  }, [findBestStem, hasValidBikes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Bike Geometry Comparison\")), /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: \"60%\",\n      margin: \"0 auto\",\n      borderCollapse: \"collapse\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Bike 1\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Bike 2\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: tableHeaderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Difference\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 52\n    }\n  }, \"Reach\")), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, bike1.effectiveReach, \" mm\"), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, bike2.effectiveReach, \" mm\"), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 52\n    }\n  }, bike2.effectiveReach - bike1.effectiveReach, \" mm\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 52\n    }\n  }, \"Total Drop\")), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, bike1.totalDrop, \" mm\"), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, bike2.totalDrop, \" mm\"), /*#__PURE__*/React.createElement(\"td\", {\n    style: tableCellStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 52\n    }\n  }, bike2.totalDrop - bike1.totalDrop, \" mm\"))))));\n};\nconst tableHeaderStyle = {\n  padding: \"10px\",\n  borderBottom: \"2px solid black\",\n  fontWeight: \"bold\",\n  textAlign: \"center\",\n  backgroundColor: \"#f4f4f4\"\n};\nconst tableCellStyle = {\n  padding: \"10px\",\n  borderBottom: \"1px solid #ddd\",\n  textAlign: \"center\"\n};\nexport default BikeVisualization;","map":{"version":3,"names":["React","useState","useEffect","useCallback","BikeVisualization","frame1","stem1","handlebar1","stackHeight1","frame2","stem2","handlebar2","stackHeight2","stems","bestStem","setBestStem","hasValidBikes","degToRad","angle","Math","PI","calculateBarPosition","frame","stem","handlebar","stackHeight","effectiveReach","totalDrop","stemEnd","barEnd","headTubeAngle","head_angle","fullStemAngle","stemLength","length","handlebarReach","reach","handlebarDrop","drop","adjustedStackHeight","parseFloat","effectiveStemReach","cos","round","effectiveStemStack","sin","effectiveStack","stack","handlebarVerticalShift","tan","bike1","bike2","findBestStem","closestStem","bestDifference","Number","MAX_VALUE","forEach","testAngle","testStem","testBike2","reachDiff","abs","dropDiff","totalDiff","recommended","console","log","createElement","style","textAlign","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","width","margin","borderCollapse","tableHeaderStyle","tableCellStyle","padding","borderBottom","fontWeight","backgroundColor"],"sources":["C:/Users/james/OneDrive/Documents/Bike Comparison Tool/frontend/src/components/BikeVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst BikeVisualization = ({\r\n    frame1, stem1, handlebar1, stackHeight1,\r\n    frame2, stem2, handlebar2, stackHeight2,\r\n    stems = []\r\n}) => {\r\n    const [bestStem, setBestStem] = useState(null);\r\n\r\n    const hasValidBikes = frame1 && stem1 && handlebar1 && frame2 && handlebar2;\r\n\r\n    const degToRad = (angle) => (angle * Math.PI) / 180;\r\n\r\n    const calculateBarPosition = useCallback((frame, stem, handlebar, stackHeight) => {\r\n        if (!frame || !stem || !handlebar) return { effectiveReach: 0, totalDrop: 0, stemEnd: [0, 0], barEnd: [0, 0] };\r\n\r\n        const headTubeAngle = 90 - frame.head_angle;\r\n        const fullStemAngle = degToRad(headTubeAngle + stem.angle);\r\n        const stemLength = stem.length;\r\n        const handlebarReach = handlebar.reach;\r\n        const handlebarDrop = handlebar.drop;\r\n        const adjustedStackHeight = parseFloat(stackHeight || 0);\r\n\r\n        const effectiveStemReach = stemLength * Math.cos(fullStemAngle);\r\n        const effectiveReach = Math.round(frame.reach + effectiveStemReach + handlebarReach);\r\n\r\n        const effectiveStemStack = stemLength * Math.sin(fullStemAngle);\r\n        const effectiveStack = Math.round(frame.stack + adjustedStackHeight + effectiveStemStack);\r\n        const handlebarVerticalShift = handlebar.reach * Math.tan(degToRad(headTubeAngle));\r\n        const totalDrop = Math.round(effectiveStack - handlebarDrop - handlebarVerticalShift);\r\n\r\n        const stemEnd = [stemLength * Math.cos(fullStemAngle), adjustedStackHeight + stemLength * Math.sin(fullStemAngle)];\r\n        const barEnd = [stemEnd[0] + handlebarReach, stemEnd[1] - handlebarDrop];\r\n\r\n        return { effectiveReach, totalDrop, stemEnd, barEnd };\r\n    }, []);\r\n\r\n    const bike1 = calculateBarPosition(frame1, stem1, handlebar1, stackHeight1);\r\n    const bike2 = calculateBarPosition(frame2, stem2, handlebar2, stackHeight2);\r\n\r\n    const findBestStem = useCallback(() => {\r\n        if (!frame2 || !handlebar2 || stems.length === 0) return null;\r\n\r\n        let closestStem = null;\r\n        let bestDifference = Number.MAX_VALUE;\r\n\r\n        stems.forEach(stem => {\r\n            [-stem.angle, stem.angle].forEach(testAngle => {\r\n                const testStem = { ...stem, angle: testAngle };\r\n                const testBike2 = calculateBarPosition(frame2, testStem, handlebar2, stackHeight2);\r\n\r\n                const reachDiff = Math.abs(testBike2.effectiveReach - bike1.effectiveReach);\r\n                const dropDiff = Math.abs(testBike2.totalDrop - bike1.totalDrop);\r\n                const totalDiff = reachDiff + dropDiff;\r\n\r\n                if (totalDiff < bestDifference) {\r\n                    bestDifference = totalDiff;\r\n                    closestStem = { ...testStem, reachDiff, dropDiff, totalDiff };\r\n                }\r\n            });\r\n        });\r\n\r\n        return closestStem;\r\n    }, [frame2, handlebar2, stems, stackHeight2, calculateBarPosition, bike1.effectiveReach, bike1.totalDrop]);\r\n\r\n    useEffect(() => {\r\n        if (hasValidBikes) {\r\n            const recommended = findBestStem();\r\n            console.log(\"Recommended Stem:\", recommended);\r\n            setBestStem(recommended);\r\n        }\r\n    }, [findBestStem, hasValidBikes]);\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n            <h3><strong>Bike Geometry Comparison</strong></h3>\r\n\r\n            <table style={{ width: \"60%\", margin: \"0 auto\", borderCollapse: \"collapse\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={tableHeaderStyle}></th>\r\n                        <th style={tableHeaderStyle}>Bike 1</th>\r\n                        <th style={tableHeaderStyle}>Bike 2</th>\r\n                        <th style={tableHeaderStyle}>Difference</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style={tableCellStyle}><strong>Reach</strong></td>\r\n                        <td style={tableCellStyle}>{bike1.effectiveReach} mm</td>\r\n                        <td style={tableCellStyle}>{bike2.effectiveReach} mm</td>\r\n                        <td style={tableCellStyle}><strong>{bike2.effectiveReach - bike1.effectiveReach} mm</strong></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tableCellStyle}><strong>Total Drop</strong></td>\r\n                        <td style={tableCellStyle}>{bike1.totalDrop} mm</td>\r\n                        <td style={tableCellStyle}>{bike2.totalDrop} mm</td>\r\n                        <td style={tableCellStyle}><strong>{bike2.totalDrop - bike1.totalDrop} mm</strong></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst tableHeaderStyle = {\r\n    padding: \"10px\",\r\n    borderBottom: \"2px solid black\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#f4f4f4\"\r\n};\r\n\r\nconst tableCellStyle = {\r\n    padding: \"10px\",\r\n    borderBottom: \"1px solid #ddd\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nexport default BikeVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}